DROP TABLE IF EXISTS comments;
DROP TABLE IF EXISTS compilation_events;
DROP TABLE IF EXISTS compilations;

CREATE TABLE IF NOT EXISTS compilations (
 id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
 title VARCHAR(255) NOT NULL,
 pinned BOOLEAN NOT NULL DEFAULT FALSE
);

COMMENT ON TABLE compilations IS 'Содержит информацию о подборках';
COMMENT ON COLUMN compilations.id IS 'Уникальный идентификатор подборки';
COMMENT ON COLUMN compilations.title IS 'Наименование подборки';
COMMENT ON COLUMN compilations.pinned IS 'Признак, закрепленности подборки';

-- =====================================================================================================================

CREATE TABLE IF NOT EXISTS compilation_events (
 compilation_id BIGINT REFERENCES compilations(id) ON DELETE CASCADE,
 event_id BIGINT NOT NULL,
 PRIMARY KEY (compilation_id, event_id)
);

COMMENT ON TABLE compilation_events IS 'Связывает подборки с событиями (many-to-many)';
COMMENT ON COLUMN compilation_events.compilation_id IS 'Идентификатор подборки';
COMMENT ON COLUMN compilation_events.event_id IS 'Идентификатор события';

-- =====================================================================================================================

CREATE TABLE IF NOT EXISTS comments (
  id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  user_id BIGINT NOT NULL,
  event_id BIGINT NOT NULL,
  text VARCHAR(4000) NOT NULL,
  created TIMESTAMP WITHOUT TIME ZONE NOT NULL,
  updated TIMESTAMP WITHOUT TIME ZONE
);

COMMENT ON TABLE comments IS 'Содержит информацию о комментариях';
COMMENT ON COLUMN comments.id IS 'Уникальный идентификатор комментария';
COMMENT ON COLUMN comments.user_id IS 'Идентификатор пользователя, оставившего комментарий';
COMMENT ON COLUMN comments.event_id IS 'Идентификатор события';
COMMENT ON COLUMN comments.text IS 'Текст комментария';
COMMENT ON COLUMN comments.created IS 'Дата и время создания комментария';
COMMENT ON COLUMN comments.updated IS 'Дата и время изменения комментария';